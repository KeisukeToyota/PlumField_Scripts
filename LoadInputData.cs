using UnityEngine;
using System.Threading;
using System;
using System.IO;
using System.Collections;

public class LoadInputData : MonoBehaviour {
	//public NeuralNetwork attack;
	//public NeuralNetwork defense;
	//public NeuralNetwork move;
	//public NeuralNetwork[] nn;
	public AttackNN attacknn;
	public DefenceNN defencenn;
	public MoveNN movenn;
	public AIManeger am;
	public double[][][] weight;
	public double[][] bias;
	public double input_weight;
	public double input_bias;
	//double[] z = new double[12]{1,1,1,0,1,1,1,1,1,1,1,1};
	//static int N = 3;
	//Thread[] threads = new Thread[N];
	//Thread[] threads = new Thread[1];

	public int hoge;

	private string[] split = {" "};
	private string[] datacheck1;
	private string[] datacheck2;
	private string[] datacheck3;



	void Start () {

		int[] hid = new int[4]{9,9,9,9};
		/*nn [0] = new NeuralNetwork (9, 4, 2, hid, 1, 0, 0, 0, 0);
		nn [1] = new NeuralNetwork (9, 4, 1, hid, 1, 0, 0, 0, 0);
		nn [2] = new NeuralNetwork (9, 4, 3, hid, 1, 0, 0, 0, 0);*/

		/*nn [0] = new NeuralNetwork (9, 4, 2, hid, 1, 0, 0, 0, 0);
		nn [1] = new NeuralNetwork (9, 4, 1, hid, 1, 0, 0, 0, 0);
		nn [2] = new NeuralNetwork (9, 4, 2, hid, 1, 0, 0, 0, 0);*/

		attacknn = new AttackNN (9, 4, 2, hid, 1, 0, 0, 0, 0);
		defencenn = new DefenceNN (9, 4, 1, hid, 1, 0, 0, 0, 0);
		movenn = new MoveNN (9, 4, 2, hid, 1, 0, 0, 0, 0);

		streamAttack ();
		streamDefense ();
		streamMove ();

		//print("load weight " + nn.weight_forward[1][1][1]);
	}
	
	// Update is called once per frame
	void Update () 	{
		//LoopNetwork ();
		MultiThread ();

	}


	
	//Now ZETTAI!! Future SOUTAI??
	public void streamAttack(){
		//StreamReader sr = new StreamReader ("FigNN-Attack-4600param.txt", System.Text.Encoding.Default);
		//int count= int.Parse(sr.ReadLine ());
		string sr = "5 9 9 -5.21028 3.851754 -1.708336 1.679121 -0.317094 -1.165546 -0.013934 0.654612 0.335666 4.349776 4.4466 -3.769794 -0.557208 1.785052 -2.172923 -1.178773 -1.81615 0.170414 -1.225944 2.167279 0.408465 1.041598 4.293197 0.803854 -3.954657 -1.20709 -0.84858 0.831018 -0.231541 7.120655 -0.802315 1.377971 0.817295 -4.619877 2.177403 -1.300353 -1.29769 0.018738 -1.587415 1.602397 -0.328681 1.131555 -0.530722 -4.634763 3.038118 -1.087254 0.326551 1.010612 0.881517 3.463194 -1.758539 1.709068 -4.095961 2.123735 -5.224275 -1.463083 0.237926 0.617588 1.324916 -5.388173 1.836249 -2.910931 -3.491186 -2.675645 2.274125 -1.317704 0.191309 0.720086 1.089528 2.639459 -1.438563 -2.433811 3.732755 -1.898068 0.668936 -1.625095 1.097417 0.384131 2.271142 -9.388237 2.906388 -3.929389 -1.435181 -0.652217 -2.119572 -0.977927 0.834798 0.310302 0.347333 -1.192468 9 9 -7.208793 4.930941 -4.888797 -1.420132 -4.281673 -9.442627 3.445038 1.051426 5.954655 -1.940479 5.097982 -9.051391 -5.801978 -1.088866 0.303698 3.9123 2.350813 0.336981 -8.213624 6.734792 2.02754 1.958788 -7.803414 -0.809864 1.385439 -1.157543 -1.659391 -8.424638 0.564183 3.019501 3.851344 -6.744237 -2.194331 -1.17942 -7.899099 -1.194281 0.844245 2.712973 -0.82497 -1.515914 2.008198 -3.489137 -11.105645 -1.690657 -1.501382 1.703313 8.81935 2.723799 0.797985 2.22463 -1.66679 -0.191302 2.122666 -0.904555 -5.108278 -1.336639 -2.108411 1.633812 -0.439383 1.0115 -3.987223 -0.162032 8.379118 -1.737481 4.798296 -1.055757 -1.314846 1.071764 4.484233 1.885415 -1.724037 -0.610658 1.50683 -1.316838 2.145773 -1.145088 -1.952021 0.133871 -2.35417 -0.379085 -5.719614 1.353739 6.323437 -1.633988 3.326315 -4.026881 -1.258498 1.047222 -0.407619 5.690107 9 9 1.712473 -0.010876 -5.913708 -1.574849 1.757461 -2.25928 -3.428927 -7.242547 -7.200982 7.077726 -5.977381 -0.849919 -3.307718 -2.977299 0.061002 -0.035117 -6.331829 2.448613 -7.203901 8.363747 -3.35856 -8.38536 -0.853865 -5.409131 -1.61412 -5.642571 5.98039 0.344852 -1.221787 9.350089 -0.696855 -0.901833 -0.645582 -1.342534 -4.563152 -1.420013 1.134882 -1.466095 2.062039 6.617866 -0.805102 -0.713499 2.562512 1.429123 3.054355 -4.049448 4.553433 -0.857345 -1.122589 3.023003 0.063249 -4.283079 -8.380608 -0.541923 -1.980861 -1.221972 -1.607297 3.015899 1.007114 2.18254 1.623892 2.218946 -1.911689 -5.928513 -2.919352 -0.857603 -5.039569 0.951573 -1.783053 3.776534 -0.73096 -0.3101 -4.314587 1.426112 0.65044 -0.507585 -2.513027 2.387843 -5.840182 5.236531 -3.617663 -2.563072 1.204301 3.59916 4.08363 -1.12179 0.318064 7.112345 8.333778 7.557728 9 9 -0.003802 -4.316785 -0.644867 -1.01893 -3.662234 -2.718559 -0.72184 -5.364121 0.841015 2.071514 -4.129878 -1.513123 -1.077561 -1.183791 -3.485854 -4.410939 -0.703576 -3.467017 -5.310228 3.891166 3.401011 -7.164813 -0.53662 -1.053855 0.870455 3.015431 -1.764942 10.413067 -6.120915 2.217341 -0.162567 1.252577 -0.845004 -1.100737 2.370446 -5.116597 -0.974924 7.363274 -4.882866 0.373535 -1.131977 -0.192077 -0.768582 -1.303961 4.394778 2.676175 -0.967514 -2.793229 1.309403 4.785658 -0.664743 -2.496377 -1.010682 -1.232839 -4.243071 -1.069484 -0.599004 0.008928 -5.80421 8.96581 -6.776345 -4.40998 -1.50069 -1.398312 3.799308 0.954942 -1.778019 2.018612 -2.233308 1.108046 -5.342045 -2.730238 -3.049455 -1.312789 2.949949 -1.332999 -4.59724 -4.406416 5.411351 0.82929 5.827415 9.263976 -0.546701 -1.238106 -3.790489 0.285624 2.520835 6.931082 8.713825 0.836914 2 9 -5.03892 8.28554 -0.815195 2.606056 -8.080594 -0.626119 -0.19563 1.440904 -0.252593 0.207745 0.51403 0.053661 -0.092874 -3.610277 -0.093854 -0.988216 6.557845 -0.160744 0.279117 3.904091 -0.229887 4.175854 -7.25579 -0.190188 -7.53037 6.768711 0.279125 ";
		//StreamWriter writer = new StreamWriter("/Users/toyotakeisuke/Downloads/PlumField000/Assets/Script/test1.txt", true, System.Text.Encoding.Default);
		
		//writer.Write (count.ToString () + " ");
		datacheck1 = sr.Split (split, StringSplitOptions.RemoveEmptyEntries);
		int datcounter = 1;
		for (int i = 0; i < 5; i++) {
			//int n = int.Parse(sr.ReadLine ());
			//writer.Write(n.ToString() + " ");
			//int m = int.Parse(sr.ReadLine ());
			//writer.Write(m.ToString() + " ");
			int n = int.Parse(datacheck1[datcounter]);
			datcounter++;
			int m = int.Parse(datacheck1[datcounter]);
			datcounter++;
			for (int j = 0; j < m; j++) {
				for (int k = 0; k < n; k++) {
					/*nn.weight_forward = new double[count][][];
					nn.weight_forward [i] = new double[n][];
					nn.weight_forward [i][j] = new double[m];*/
					//print ("weight_forward : "+ i+ " " + j + " " + k  );
					//print(nn.weight_forward [i][j][k]);
					//nn.weight_forward [i][j][k] += double.Parse (sr.ReadLine ());
					weight = new double[5][][];
					weight[i] = new double[m][];
					weight[i][j] = new double[n];
					weight[i][j][k] += double.Parse(datacheck1[datcounter]);

					//writer.Write(weight[i][j][k].ToString() + " ");
					//nn[2].input_weight(i,j,k,weight[i][j][k]);
					attacknn.input_weight(i,j,k,weight[i][j][k]);
					datcounter++;
					//print(i + "  " + weight[i][j][k]);
					
				}
				/*nn.bias_forward = new double[count][];
				nn.bias_forward [i] = new double[n];*/
				//print ("bias_forward : "+ i+ " " + j);
				//nn.bias_forward[i][j] += double.Parse(sr.ReadLine ());
				bias= new double[5][];
				bias[i] = new double[m];
				bias[i][j] += double.Parse(datacheck1[datcounter]);
				//writer.Write(bias[i][j].ToString() + " ");
				//nn[2].input_bias(i,j,bias[i][j]);
				attacknn.input_bias(i,j,bias[i][j]);
				datcounter++;
			}


		}
		//writer.Close ();
		//sr.Close();
	}

	public void streamDefense(){
		//StreamReader sr = new StreamReader ("FigNN-Defence-9999param.txt", System.Text.Encoding.Default);
		//int count= int.Parse(sr.ReadLine ());
		string sr = "5 9 9 -5.432151 3.629883 -1.930207 1.45725 -0.538965 -1.387417 -0.235805 0.432741 0.113795 0.396031 4.36224 -3.854154 -0.641568 1.700692 -2.257283 -1.263133 -1.90051 0.086054 -1.310304 0.663977 -0.012001 0.621132 3.872731 0.383388 -4.375123 -1.627556 -1.269046 0.410552 -0.652007 -0.372052 -0.803391 1.376895 0.816219 -4.620953 2.176327 -1.301429 -1.298766 0.017662 -1.588491 1.583218 -0.490608 0.969628 -0.692649 -4.79669 2.876191 -1.249181 0.164624 0.848685 0.71959 0.577643 -1.446734 2.020873 -3.784156 2.43554 -4.91247 -1.151278 0.549731 0.929393 1.636721 0.168191 1.770351 -2.976829 -3.557084 -2.741543 2.208227 -1.383602 0.125411 0.654188 1.02363 1.465158 -1.091173 -2.086421 4.080145 -1.550678 1.016326 -1.277705 1.444807 0.731521 2.618532 -3.197745 2.983788 -3.851989 -1.357781 -0.574817 -2.042172 -0.900527 0.912198 0.387702 0.424733 0.186803 9 9 -0.444552 0.48176 -0.666232 -0.826139 -4.49225 -1.081293 -1.58411 -2.987226 -0.240167 2.342491 -1.50853 -1.059853 1.810589 -1.007179 1.210486 -1.02849 -1.643092 -0.487271 -3.309615 0.905939 0.070034 -0.280796 -3.906422 -0.521396 0.048004 -0.981364 -0.26935 -3.862861 0.691707 1.707956 -0.686668 -2.323955 -0.836807 -1.184393 -2.796658 -1.334261 1.053809 1.729468 2.544132 -0.515016 -1.12215 -1.797842 -5.961071 -1.633308 2.049658 -1.600072 2.569805 1.344005 -0.350248 0.492095 -1.657793 -0.163911 2.16413 -0.900386 -5.142465 -1.33557 -2.148044 1.666101 -0.479002 0.501174 -1.438826 -2.450457 2.402099 -1.666811 0.67445 -1.366539 -0.86463 1.6102 3.051103 -1.257271 -1.7654 -0.724862 1.287534 -1.302139 1.86508 -1.187715 -1.99181 0.165641 -2.917762 0.761162 -1.258635 -1.367234 -0.313628 -1.584076 1.697431 -1.577978 -0.607099 1.83508 -1.101777 0.276434 9 9 -1.270567 -1.412453 -1.540575 -1.470183 0.629676 -1.078153 -1.70202 -3.94239 0.837448 1.18675 -1.532985 -1.168572 -0.910466 -1.02126 -0.872401 -1.217079 -2.929995 0.283053 -3.479107 0.797441 -0.490967 -0.920401 -0.841024 -1.110873 -2.491298 -1.042789 0.208532 -3.467018 0.352424 1.10513 -0.658814 -0.901968 -0.639209 -1.366372 -4.611822 -1.429859 1.145611 -1.511333 2.158056 1.34183 -1.816178 -1.280726 -1.74318 -1.472921 2.967374 -1.675866 1.365197 -1.167483 -2.334404 0.793529 -1.055967 -1.22641 -1.328006 -1.091982 -2.342302 -1.20775 -0.921623 1.434474 0.593787 0.198683 -0.841239 -0.473187 -0.733681 -0.981685 -3.194235 -1.226742 -2.674576 2.041715 -1.353158 0.565191 -0.59721 -1.010261 -1.125051 -1.067322 0.237171 -1.125785 -1.225721 0.908298 -4.214134 1.216076 -1.577911 -1.653742 -1.372481 -1.21928 3.183103 -1.514612 0.068662 3.022558 2.409247 -1.322956 9 9 -1.254524 -0.798122 -0.7197 -1.039265 -3.220163 -1.284425 -0.618315 -3.304136 0.918923 1.693557 -0.626729 -0.962401 -0.987753 -1.231227 -3.263196 -1.188538 -0.094803 -3.017045 -2.4531 1.589498 -1.027138 -1.404166 -1.016581 -1.0792 0.798968 -1.189033 -1.442986 2.07324 -4.477748 0.938253 -1.438853 -0.959862 -1.128403 -1.145874 2.342405 -1.417419 -0.807131 1.731793 -2.075305 0.202322 -1.328953 -1.257505 -1.298964 -1.355124 2.632062 -1.132456 -0.99756 -2.866804 1.47199 0.796646 -1.158483 -1.109151 -0.874763 -1.247789 -3.290606 -1.121559 -0.250481 0.58317 -2.888601 1.247828 -1.639823 -1.233452 -1.605555 -1.33387 1.76213 -1.354302 -0.972062 0.620742 -1.251495 0.808021 -0.740385 -1.149184 -1.124912 -0.871527 0.58744 -1.308242 -0.941727 -3.207646 2.629577 0.718857 -0.787807 -1.084318 -1.454107 -1.308418 -3.808793 -1.085831 -0.636596 2.285209 1.943263 0.907949 1 9 -0.446451 -4.342803 0.04321 0.262059 -0.131581 0.136372 0.022683 0.185025 -1.63786 0.049559 -0.040049 -0.252593 -0.016018 -0.022678 0.015599 0.053661 -1.746683 0.189639 5 9 9 -5.432151 3.629883 -1.930207 1.45725 -0.538965 -1.387417 -0.235805 0.432741 0.113795 0.396031 4.36224 -3.854154 -0.641568 1.700692 -2.257283 -1.263133 -1.90051 0.086054 -1.310304 0.663977 -0.012001 0.621132 3.872731 0.383388 -4.375123 -1.627556 -1.269046 0.410552 -0.652007 -0.372052 -0.803391 1.376895 0.816219 -4.620953 2.176327 -1.301429 -1.298766 0.017662 -1.588491 1.583218 -0.490608 0.969628 -0.692649 -4.79669 2.876191 -1.249181 0.164624 0.848685 0.71959 0.577643 -1.446734 2.020873 -3.784156 2.43554 -4.91247 -1.151278 0.549731 0.929393 1.636721 0.168191 1.770351 -2.976829 -3.557084 -2.741543 2.208227 -1.383602 0.125411 0.654188 1.02363 1.465158 -1.091173 -2.086421 4.080145 -1.550678 1.016326 -1.277705 1.444807 0.731521 2.618532 -3.197745 2.983788 -3.851989 -1.357781 -0.574817 -2.042172 -0.900527 0.912198 0.387702 0.424733 0.186803 9 9 -0.444552 0.48176 -0.666232 -0.826139 -4.49225 -1.081293 -1.58411 -2.987226 -0.240167 2.342491 -1.50853 -1.059853 1.810589 -1.007179 1.210486 -1.02849 -1.643092 -0.487271 -3.309615 0.905939 0.070034 -0.280796 -3.906422 -0.521396 0.048004 -0.981364 -0.26935 -3.862861 0.691707 1.707956 -0.686668 -2.323955 -0.836807 -1.184393 -2.796658 -1.334261 1.053809 1.729468 2.544132 -0.515016 -1.12215 -1.797842 -5.961071 -1.633308 2.049658 -1.600072 2.569805 1.344005 -0.350248 0.492095 -1.657793 -0.163911 2.16413 -0.900386 -5.142465 -1.33557 -2.148044 1.666101 -0.479002 0.501174 -1.438826 -2.450457 2.402099 -1.666811 0.67445 -1.366539 -0.86463 1.6102 3.051103 -1.257271 -1.7654 -0.724862 1.287534 -1.302139 1.86508 -1.187715 -1.99181 0.165641 -2.917762 0.761162 -1.258635 -1.367234 -0.313628 -1.584076 1.697431 -1.577978 -0.607099 1.83508 -1.101777 0.276434 9 9 -1.270567 -1.412453 -1.540575 -1.470183 0.629676 -1.078153 -1.70202 -3.94239 0.837448 1.18675 -1.532985 -1.168572 -0.910466 -1.02126 -0.872401 -1.217079 -2.929995 0.283053 -3.479107 0.797441 -0.490967 -0.920401 -0.841024 -1.110873 -2.491298 -1.042789 0.208532 -3.467018 0.352424 1.10513 -0.658814 -0.901968 -0.639209 -1.366372 -4.611822 -1.429859 1.145611 -1.511333 2.158056 1.34183 -1.816178 -1.280726 -1.74318 -1.472921 2.967374 -1.675866 1.365197 -1.167483 -2.334404 0.793529 -1.055967 -1.22641 -1.328006 -1.091982 -2.342302 -1.20775 -0.921623 1.434474 0.593787 0.198683 -0.841239 -0.473187 -0.733681 -0.981685 -3.194235 -1.226742 -2.674576 2.041715 -1.353158 0.565191 -0.59721 -1.010261 -1.125051 -1.067322 0.237171 -1.125785 -1.225721 0.908298 -4.214134 1.216076 -1.577911 -1.653742 -1.372481 -1.21928 3.183103 -1.514612 0.068662 3.022558 2.409247 -1.322956 9 9 -1.254524 -0.798122 -0.7197 -1.039265 -3.220163 -1.284425 -0.618315 -3.304136 0.918923 1.693557 -0.626729 -0.962401 -0.987753 -1.231227 -3.263196 -1.188538 -0.094803 -3.017045 -2.4531 1.589498 -1.027138 -1.404166 -1.016581 -1.0792 0.798968 -1.189033 -1.442986 2.07324 -4.477748 0.938253 -1.438853 -0.959862 -1.128403 -1.145874 2.342405 -1.417419 -0.807131 1.731793 -2.075305 0.202322 -1.328953 -1.257505 -1.298964 -1.355124 2.632062 -1.132456 -0.99756 -2.866804 1.47199 0.796646 -1.158483 -1.109151 -0.874763 -1.247789 -3.290606 -1.121559 -0.250481 0.58317 -2.888601 1.247828 -1.639823 -1.233452 -1.605555 -1.33387 1.76213 -1.354302 -0.972062 0.620742 -1.251495 0.808021 -0.740385 -1.149184 -1.124912 -0.871527 0.58744 -1.308242 -0.941727 -3.207646 2.629577 0.718857 -0.787807 -1.084318 -1.454107 -1.308418 -3.808793 -1.085831 -0.636596 2.285209 1.943263 0.907949 1 9 -0.446451 -4.342803 0.04321 0.262059 -0.131581 0.136372 0.022683 0.185025 -1.63786 0.049559 -0.040049 -0.252593 -0.016018 -0.022678 0.015599 0.053661 -1.746683 0.189639 ";

		//StreamWriter writer = new StreamWriter("/Users/toyotakeisuke/Downloads/PlumField000/Assets/Script/test2.txt", true, System.Text.Encoding.Default);
		
		//writer.Write (count.ToString () + " ");
		datacheck2 = sr.Split (split, StringSplitOptions.RemoveEmptyEntries);
		int datcounter = 1;
		for (int i = 0; i < 5; i++) {
			//int n = int.Parse(sr.ReadLine ());
			//writer.Write(n.ToString() + " ");
			//int m = int.Parse(sr.ReadLine ());
			//writer.Write(m.ToString() + " ");
			int n = int.Parse(datacheck2[datcounter]);
			datcounter++;
			int m = int.Parse(datacheck2[datcounter]);
			datcounter++;
			for (int j = 0; j < m; j++) {
				for (int k = 0; k < n; k++) {
					/*nn.weight_forward = new double[count][][];
					nn.weight_forward [i] = new double[n][];
					nn.weight_forward [i][j] = new double[m];*/
					//print ("weight_forward : "+ i+ " " + j + " " + k  );
					//print(nn.weight_forward [i][j][k]);
					//nn.weight_forward [i][j][k] += double.Parse (sr.ReadLine ());
					weight = new double[5][][];
					weight[i] = new double[m][];
					weight[i][j] = new double[n];
					weight[i][j][k] += double.Parse(datacheck2[datcounter]);
					
					//writer.Write(weight[i][j][k].ToString() + " ");
					//nn[2].input_weight(i,j,k,weight[i][j][k]);
					defencenn.input_weight(i,j,k,weight[i][j][k]);
					datcounter++;
					//print(i + "  " + weight[i][j][k]);
					
				}
				/*nn.bias_forward = new double[count][];
				nn.bias_forward [i] = new double[n];*/
				//print ("bias_forward : "+ i+ " " + j);
				//nn.bias_forward[i][j] += double.Parse(sr.ReadLine ());
				bias= new double[5][];
				bias[i] = new double[m];
				bias[i][j] += double.Parse(datacheck2[datcounter]);
				//writer.Write(bias[i][j].ToString() + " ");
				//nn[2].input_bias(i,j,bias[i][j]);
				defencenn.input_bias(i,j,bias[i][j]);
				datcounter++;
			}
			
		}
		
		//sr.Close();
		//writer.Close ();
	}

	public void streamMove(){
		//StreamReader sr = new StreamReader ("FigNN-move-6400param.txt", System.Text.Encoding.Default);
		//int count= int.Parse(sr.ReadLine ());
		//StreamWriter writer = new StreamWriter("/Users/toyotakeisuke/Downloads/PlumField000/Assets/Script/test3.txt", true, System.Text.Encoding.Default);
		string sr = "5 9 9 -5.630828 3.431206 -2.128884 1.258573 -0.737642 -1.586094 -0.434482 0.234064 -0.084882 -3.144391 4.40617 -3.810224 -0.597638 1.744622 -2.213353 -1.219203 -1.85658 0.129984 -1.266374 1.446804 0.371401 1.004534 4.256133 0.76679 -3.991721 -1.244154 -0.885644 0.793954 -0.268605 6.460162 -0.829738 1.350548 0.789872 -4.6473 2.14998 -1.327776 -1.325113 -0.008685 -1.614838 1.113713 -0.680523 0.779713 -0.882564 -4.986605 2.686276 -1.439096 -0.025291 0.65877 0.529675 -2.806644 -1.338321 2.129286 -3.675743 2.543953 -4.804057 -1.042865 0.658144 1.037806 1.745134 2.100109 1.735285 -3.011895 -3.59215 -2.776609 2.173161 -1.418668 0.090345 0.619122 0.988564 0.840282 -1.045605 -2.040853 4.125713 -1.50511 1.061894 -1.232137 1.490375 0.777089 2.6641 -2.385727 2.753699 -4.082078 -1.58787 -0.804906 -2.272261 -1.130616 0.682109 0.157613 0.194644 -3.913388 9 9 -2.542898 0.340411 -2.136641 0.206241 -6.030892 -0.3111 -1.670635 -2.905201 -1.709646 3.256954 -0.820125 -0.986784 1.174747 -1.07457 1.326628 -1.021273 -1.630142 0.272228 -2.900403 0.001756 0.872173 -0.71455 -3.530003 -0.351543 0.205565 -1.136573 -0.452857 -4.035408 0.107107 2.035208 -0.904429 -2.270818 -3.918384 -0.613648 -4.70954 -1.242773 1.222604 4.675388 4.577738 -0.255599 -0.409398 -1.912323 -5.658955 -2.149588 1.587896 -1.940941 2.331443 -0.696325 -1.331317 0.681276 -1.531293 -0.334726 3.069411 -1.14032 -4.498112 -1.484038 -2.272878 0.210763 -1.357618 0.020653 -1.84223 -2.978903 5.418835 -2.479684 -0.164733 -1.730105 -0.952965 2.648129 2.736031 -1.676449 -1.119845 -1.009038 2.218561 -0.923223 2.215766 -1.130196 -2.102748 1.322334 -2.779919 0.358275 -4.317979 -1.5287 -1.499329 -1.618443 0.317187 -1.566982 -0.614692 2.240612 -1.625689 -1.984679 9 9 -1.321244 -1.847484 -1.730562 -1.62836 0.348328 -0.857587 -1.493455 -4.904677 1.86 1.038135 -1.567561 -1.374298 -1.198663 -1.220902 -1.061624 -1.227856 -2.940151 0.227157 -3.026415 1.568126 -0.213911 -0.794085 -1.281106 -2.133884 -4.096975 -0.057521 -0.384744 -3.632278 0.832669 4.137748 -0.699354 -1.015169 -0.687327 -1.400973 -4.584038 -1.477831 1.21543 -1.583487 2.289849 2.921508 -2.023687 -1.022611 -1.955189 -0.554489 3.893452 -1.220162 2.435395 -2.636362 -3.895058 2.097515 -1.068559 -1.267434 -1.293119 -1.07603 -2.344159 -1.092558 -0.754183 1.405164 0.721741 1.785089 -0.842953 -0.463255 -0.709686 -0.950809 -3.179554 -1.202815 -2.665187 2.047163 -1.291957 1.564208 -0.576605 -0.375632 -1.325939 -0.617586 0.936938 -1.642017 -2.757447 1.575111 -5.663709 2.494068 -1.484852 -2.068318 -2.208994 -1.753248 3.805604 -2.636257 -1.684695 5.082255 2.426538 -0.287062 9 9 -1.223043 -0.727567 -0.67613 -1.029422 -3.105166 -1.217273 -0.84383 -3.505836 0.805294 1.968935 -0.66512 -1.019807 -0.981553 -1.225333 -2.912282 -1.51269 0.017352 -3.241019 -2.649871 2.148979 -1.035938 -1.446726 -0.985577 -1.068523 1.103309 -1.638449 -1.807652 1.900881 -4.869199 1.323946 -1.471915 -1.006356 -1.111083 -1.136418 2.940015 -1.823985 -1.004684 1.445838 -2.399234 0.281232 -1.214748 -1.046756 -1.186331 -1.33152 4.964783 -0.290907 -0.559667 -4.168953 2.924898 1.991828 -1.161815 -1.174997 -0.848827 -1.238802 -3.214496 -1.629996 -0.606865 0.549699 -2.862617 2.830333 -1.824667 -1.597911 -1.720097 -1.350302 2.368018 -2.572493 -0.240983 0.879625 -0.157643 1.881571 -1.722075 -2.24653 -1.536283 -0.94561 1.592557 -3.782907 1.593742 -4.890247 2.104115 0.145337 -0.657869 -0.818885 -1.305833 -1.278641 -4.48171 -0.739054 -2.169107 2.794013 2.822317 4.268817 2 9 -1.335751 0.379235 0.332996 -1.829231 0.27806 4.605249 -0.973279 0.146956 -0.252593 -0.349469 0.10039 0.053661 -4.183853 1.769942 7E-06 -4.082392 0.012981 0 3.373717 0.575567 -0.229887 3.94553 0.575701 -0.190188 4.85003 1.438123 3.373717 5 9 9 -5.630828 3.431206 -2.128884 1.258573 -0.737642 -1.586094 -0.434482 0.234064 -0.084882 -3.144391 4.40617 -3.810224 -0.597638 1.744622 -2.213353 -1.219203 -1.85658 0.129984 -1.266374 1.446804 0.371401 1.004534 4.256133 0.76679 -3.991721 -1.244154 -0.885644 0.793954 -0.268605 6.460162 -0.829738 1.350548 0.789872 -4.6473 2.14998 -1.327776 -1.325113 -0.008685 -1.614838 1.113713 -0.680523 0.779713 -0.882564 -4.986605 2.686276 -1.439096 -0.025291 0.65877 0.529675 -2.806644 -1.338321 2.129286 -3.675743 2.543953 -4.804057 -1.042865 0.658144 1.037806 1.745134 2.100109 1.735285 -3.011895 -3.59215 -2.776609 2.173161 -1.418668 0.090345 0.619122 0.988564 0.840282 -1.045605 -2.040853 4.125713 -1.50511 1.061894 -1.232137 1.490375 0.777089 2.6641 -2.385727 2.753699 -4.082078 -1.58787 -0.804906 -2.272261 -1.130616 0.682109 0.157613 0.194644 -3.913388 9 9 -2.542898 0.340411 -2.136641 0.206241 -6.030892 -0.3111 -1.670635 -2.905201 -1.709646 3.256954 -0.820125 -0.986784 1.174747 -1.07457 1.326628 -1.021273 -1.630142 0.272228 -2.900403 0.001756 0.872173 -0.71455 -3.530003 -0.351543 0.205565 -1.136573 -0.452857 -4.035408 0.107107 2.035208 -0.904429 -2.270818 -3.918384 -0.613648 -4.70954 -1.242773 1.222604 4.675388 4.577738 -0.255599 -0.409398 -1.912323 -5.658955 -2.149588 1.587896 -1.940941 2.331443 -0.696325 -1.331317 0.681276 -1.531293 -0.334726 3.069411 -1.14032 -4.498112 -1.484038 -2.272878 0.210763 -1.357618 0.020653 -1.84223 -2.978903 5.418835 -2.479684 -0.164733 -1.730105 -0.952965 2.648129 2.736031 -1.676449 -1.119845 -1.009038 2.218561 -0.923223 2.215766 -1.130196 -2.102748 1.322334 -2.779919 0.358275 -4.317979 -1.5287 -1.499329 -1.618443 0.317187 -1.566982 -0.614692 2.240612 -1.625689 -1.984679 9 9 -1.321244 -1.847484 -1.730562 -1.62836 0.348328 -0.857587 -1.493455 -4.904677 1.86 1.038135 -1.567561 -1.374298 -1.198663 -1.220902 -1.061624 -1.227856 -2.940151 0.227157 -3.026415 1.568126 -0.213911 -0.794085 -1.281106 -2.133884 -4.096975 -0.057521 -0.384744 -3.632278 0.832669 4.137748 -0.699354 -1.015169 -0.687327 -1.400973 -4.584038 -1.477831 1.21543 -1.583487 2.289849 2.921508 -2.023687 -1.022611 -1.955189 -0.554489 3.893452 -1.220162 2.435395 -2.636362 -3.895058 2.097515 -1.068559 -1.267434 -1.293119 -1.07603 -2.344159 -1.092558 -0.754183 1.405164 0.721741 1.785089 -0.842953 -0.463255 -0.709686 -0.950809 -3.179554 -1.202815 -2.665187 2.047163 -1.291957 1.564208 -0.576605 -0.375632 -1.325939 -0.617586 0.936938 -1.642017 -2.757447 1.575111 -5.663709 2.494068 -1.484852 -2.068318 -2.208994 -1.753248 3.805604 -2.636257 -1.684695 5.082255 2.426538 -0.287062 9 9 -1.223043 -0.727567 -0.67613 -1.029422 -3.105166 -1.217273 -0.84383 -3.505836 0.805294 1.968935 -0.66512 -1.019807 -0.981553 -1.225333 -2.912282 -1.51269 0.017352 -3.241019 -2.649871 2.148979 -1.035938 -1.446726 -0.985577 -1.068523 1.103309 -1.638449 -1.807652 1.900881 -4.869199 1.323946 -1.471915 -1.006356 -1.111083 -1.136418 2.940015 -1.823985 -1.004684 1.445838 -2.399234 0.281232 -1.214748 -1.046756 -1.186331 -1.33152 4.964783 -0.290907 -0.559667 -4.168953 2.924898 1.991828 -1.161815 -1.174997 -0.848827 -1.238802 -3.214496 -1.629996 -0.606865 0.549699 -2.862617 2.830333 -1.824667 -1.597911 -1.720097 -1.350302 2.368018 -2.572493 -0.240983 0.879625 -0.157643 1.881571 -1.722075 -2.24653 -1.536283 -0.94561 1.592557 -3.782907 1.593742 -4.890247 2.104115 0.145337 -0.657869 -0.818885 -1.305833 -1.278641 -4.48171 -0.739054 -2.169107 2.794013 2.822317 4.268817 2 9 -1.335751 0.379235 0.332996 -1.829231 0.27806 4.605249 -0.973279 0.146956 -0.252593 -0.349469 0.10039 0.053661 -4.183853 1.769942 7E-06 -4.082392 0.012981 0 3.373717 0.575567 -0.229887 3.94553 0.575701 -0.190188 4.85003 1.438123 3.373717 ";

		datacheck3 = sr.Split (split, StringSplitOptions.RemoveEmptyEntries);
		int datcounter = 1;
		for (int i = 0; i < 5; i++) {
			//int n = int.Parse(sr.ReadLine ());
			//writer.Write(n.ToString() + " ");
			//int m = int.Parse(sr.ReadLine ());
			//writer.Write(m.ToString() + " ");
			int n = int.Parse(datacheck3[datcounter]);
			datcounter++;
			int m = int.Parse(datacheck3[datcounter]);
			datcounter++;
			for (int j = 0; j < m; j++) {
				for (int k = 0; k < n; k++) {
					/*nn.weight_forward = new double[count][][];
					nn.weight_forward [i] = new double[n][];
					nn.weight_forward [i][j] = new double[m];*/
					//print ("weight_forward : "+ i+ " " + j + " " + k  );
					//print(nn.weight_forward [i][j][k]);
					//nn.weight_forward [i][j][k] += double.Parse (sr.ReadLine ());
					weight = new double[5][][];
					weight[i] = new double[m][];
					weight[i][j] = new double[n];
					weight[i][j][k] += double.Parse(datacheck3[datcounter]);
					
					//writer.Write(weight[i][j][k].ToString() + " ");
					//nn[2].input_weight(i,j,k,weight[i][j][k]);
					movenn.input_weight(i,j,k,weight[i][j][k]);
					datcounter++;
					//print(i + "  " + weight[i][j][k]);
					
				}
				/*nn.bias_forward = new double[count][];
				nn.bias_forward [i] = new double[n];*/
				//print ("bias_forward : "+ i+ " " + j);
				//nn.bias_forward[i][j] += double.Parse(sr.ReadLine ());
				bias= new double[5][];
				bias[i] = new double[m];
				bias[i][j] += double.Parse(datacheck3[datcounter]);
				//writer.Write(bias[i][j].ToString() + " ");
				//nn[2].input_bias(i,j,bias[i][j]);
				movenn.input_bias(i,j,bias[i][j]);
				datcounter++;
			}
			
		}
		
		//sr.Close();
		//writer.Close ();
	}

	

	public void MultiThread(){
		/*nn [0].forwardPropagation (am.ActionDesitioin ());
		nn [1].forwardPropagation (am.ActionDesitioin ());
		nn [2].forwardPropagation (am.ActionDesitioin ());*/
		//print ("kjfkdlsajfksadjfkla"+nn [0].a);

		attacknn.forwardPropagation (am.ActionDesitioin (),hoge);
		defencenn.forwardPropagation (am.ActionDesitioin ());
		movenn.forwardPropagation (am.ActionDesitioin (),hoge);
	}

	public int getRoundingOutput(int output){
		return output;
	}



}
